24.个人中心-模块介绍
25.个人中心-TabBar处理
26.个人中心-页面布局-顶部未登录
27.个人中心-页面布局-顶部已登录状态
28.个人中心-页面布局-宫格导航
29.个人中心-处理页面显示状态
30.个人中心-用户退出
31.个人中心-展示当前登录用户信息
32.个人中心-优化设置Token


    Vant 组件  https://youzan.github.io/vant/#/zh-CN/tabbar




	TabBar 处理

	通过分析页面，我们可以看到，首页、问答、视频、我的 都使用的是同一个底部标签栏，我们没必要在每个页面中都写一个，所以为了通用方便，我们可以使用 Vue Router 的嵌套路由来处理。

	- 父路由：一个空页面，包含一个 tabbar，中间留子路由出口
	- 子路由
	  - 首页
	  - 问答
	  - 视频
	  - 我的


	  分别创建首页、问答、视频、我的页面组件


	  右键 views  ---  new directory  name:home

	  右键 home   ---  new  file  name:index.vue

		<template>
	    <div class="home-container">首页</div>
		</template>

		<script>
		export default {
		  name: 'HomePage',
		  components: {},
		  props: {},
		  data () {
		    return {}
		  },
		  computed: {},
		  watch: {},
		  created () {},
		  mounted () {},
		  methods: {}
		}
		</script>

		<style scoped></style>


	  右键 views  ---  new directory  name:qa

	  右键 qa   ---  new  file  name:index.vue

		<template>
		  <div class="qa-container">问答</div>
		</template>

		<script>
		export default {
		  name: 'QaPage',
		  components: {},
		  props: {},
		  data () {
		    return {}
		  },
		  computed: {},
		  watch: {},
		  created () {},
		  mounted () {},
		  methods: {}
		}
		</script>

		<style scoped></style>


	  右键 views  ---  new directory  name:video

	  右键 video   ---  new  file  name:index.vue

		<template>
		  <div class="video-container">视频</div>
		</template>

		<script>
		export default {
		  name: 'VideoPage',
		  components: {},
		  props: {},
		  data () {
		    return {}
		  },
		  computed: {},
		  watch: {},
		  created () {},
		  mounted () {},
		  methods: {}
		}
		</script>

		<style scoped></style>



		右键 views  ---  new directory  name:my

	  右键 my   ---  new  file  name:index.vue

		<template>
		  <div class="my-container">我的</div>
		</template>

		<script>
		export default {
		  name: 'MyPage',
		  components: {},
		  props: {},
		  data () {
		    return {}
		  },
		  computed: {},
		  watch: {},
		  created () {},
		  mounted () {},
		  methods: {}
		}
		</script>

		<style scoped></style>




        打开  src/router/index.js

        在      

          {
		    path: '/login',
		    name: 'login',
		    component: () => import('@/views/login')
		  }



        下面加入


		,
		  {
		    path: '/',
		    // name: 'layout', // 如果父路由有默认子路由，那它的 name 没有意义
		    component: () => import('@/views/layout'),
		    children: [
		      {
		        path: '', // 默认子路由，只能有1个
		        name: 'home',
		        component: () => import('@/views/home')
		      },
		      {
		        path: '/qa',
		        name: 'qa',
		        component: () => import('@/views/qa')
		      },
		      {
		        path: '/video',
		        name: 'video',
		        component: () => import('@/views/video')
		      },
		      {
		        path: '/my',
		        name: 'my',
		        component: () => import('@/views/my')
		      }
		    ]
		  }


	  创建 src/views/layout/index.vue


	    <template>
		  <div class="layout-container">
		    <!-- 子路由出口 -->
		    <router-view />
		    <!-- /子路由出口 -->

		    <!-- 标签导航栏 -->
		    <!--
		      route: 开启路由模式
		     -->
		    <van-tabbar class="layout-tabbar" route>
		      <van-tabbar-item to="/">
		        <i slot="icon" class="toutiao toutiao-shouye"></i>
		        <span class="text">首页</span>
		      </van-tabbar-item>
		      <van-tabbar-item to="/qa">
		        <i slot="icon" class="toutiao toutiao-wenda"></i>
		        <span class="text">问答</span>
		      </van-tabbar-item>
		      <van-tabbar-item to="/video">
		        <i slot="icon" class="toutiao toutiao-shipin"></i>
		        <span class="text">视频</span>
		      </van-tabbar-item>
		      <van-tabbar-item to="/my">
		        <i slot="icon" class="toutiao toutiao-wode"></i>
		        <span class="text">我的</span>
		      </van-tabbar-item>
		    </van-tabbar>
		    <!-- /标签导航栏 -->
		  </div>
		</template>

		<script>
		export default {
		  name: 'LayoutIndex',
		  components: {},
		  props: {},
		  data () {
		    return {
		    }
		  },
		  computed: {},
		  watch: {},
		  created () {},
		  mounted () {},
		  methods: {}
		}
		</script>

		<style scoped lang="less">
		.layout-container {
		  .layout-tabbar {
		    i.toutiao {
		      font-size: 40px;
		    }
		    span.text {
		      font-size: 20px;
		    }
		  }
		}
		</style>


	  http://localhost:8080/#/



